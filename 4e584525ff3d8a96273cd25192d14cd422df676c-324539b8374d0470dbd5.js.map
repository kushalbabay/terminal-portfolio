{"version":3,"file":"4e584525ff3d8a96273cd25192d14cd422df676c-324539b8374d0470dbd5.js","mappings":"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","sources":["webpack://terminal-portfolio/./src/models/models.tsx","webpack://terminal-portfolio/./src/components/inputline/inputline.tsx","webpack://terminal-portfolio/./src/utils/utils.tsx","webpack://terminal-portfolio/./src/components/output/output.tsx","webpack://terminal-portfolio/./src/components/rainBG/rainBG.tsx","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/utils/wildcards.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://terminal-portfolio/./src/components/loading/loading.tsx","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/use-force-update.mjs","webpack://terminal-portfolio/./node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","webpack://terminal-portfolio/./src/pages/homepage/homepage.tsx"],"sourcesContent":["import React from \"react\";\r\nexport const commandLineText = `visitor@kushal's-terminal:~$`;\r\n\r\nexport const acceptedInputs = [\r\n  \"help\",\r\n  \"about\",\r\n  \"skills\",\r\n  \"contacts\",\r\n  \"projects\",\r\n  \"clr\",\r\n  \"cls\",\r\n  \"clear\",\r\n];\r\n\r\nexport const outputs = {\r\n  help: (\r\n    <pre>\r\n      <span className=\"white\">help</span> - help a list of all available\r\n      commands.\r\n      <br />\r\n      <span className=\"white\">about</span> - Shows a short intro about the\r\n      author.\r\n      <br />\r\n      <span className=\"white\">skills</span> - Shows the technical proficiency of\r\n      the author.\r\n      <br />\r\n      <span className=\"white\">contacts</span> - Shows the contact information of\r\n      the author.\r\n      <br />\r\n      <span className=\"white\">projects</span> - Shows a list of all available\r\n      commands.\r\n      <br />\r\n      <span className=\"white\">cls | clr | clear</span> - Clears the terminal\r\n      window.\r\n      <br />\r\n    </pre>\r\n  ),\r\n};\r\n\r\nexport const loadingMessages = [\r\n  \"booting up the system...\",\r\n  \"checking for updates...\",\r\n  \"loading user preferences...\",\r\n  \"bundling NPM packages...\",\r\n  \"running the compiler...\",\r\n  \"loading terminal window...\",\r\n  \"setting up the project...\",\r\n];\r\n\r\nexport const loadingText = `                                                                                           \r\n                                                                       ########                                              \r\n###########                                                            #::::::#  ####                                        \r\n#:::::::::#                                                            #::::::# #::::#                                       \r\n#:::::::::#                                                            #::::::#  ####                                        \r\n##:::::::##                                                            #:::::#                                               \r\n  #:::::#                  ###########     #############       #########:::::# ####### ####  ########       #########   #####\r\n  #:::::#                ##:::::::::::##   #::::::::::::#    ##::::::::::::::# #:::::# #:::##::::::::##    #:::::::::###::::#\r\n  #:::::#               #:::::::::::::::#  #########:::::#  #::::::::::::::::#  #::::# #::::::::::::::##  #:::::::::::::::::#\r\n  #:::::#               #:::::#####:::::#           #::::# #:::::::#####:::::#  #::::# ##:::::::::::::::##::::::#####::::::##\r\n  #:::::#               #::::#     #::::#    #######:::::# #::::::#    #:::::#  #::::#   #:::::####:::::##:::::#     #:::::# \r\n  #:::::#               #::::#     #::::#  ##::::::::::::# #:::::#     #:::::#  #::::#   #::::#    #::::##:::::#     #:::::# \r\n  #:::::#               #::::#     #::::# #::::####::::::# #:::::#     #:::::#  #::::#   #::::#    #::::##:::::#     #:::::# \r\n  #:::::#         #######::::#     #::::##::::#    #:::::# #:::::#     #:::::#  #::::#   #::::#    #::::##::::::#    #:::::# \r\n##:::::::#########:::::##:::::#####:::::##::::#    #:::::# #::::::#####::::::###::::::#  #::::#    #::::##:::::::#####:::::# \r\n#::::::::::::::::::::::##:::::::::::::::##:::::####::::::#  #:::::::::::::::::##::::::#  #::::#    #::::# #::::::::::::::::# \r\n#::::::::::::::::::::::# ##:::::::::::##  #::::::::::##:::#  #:::::::::###::::##::::::#  #::::#    #::::#  ##::::::::::::::# \r\n########################   ###########     ##########  ####   #########   #############  ######    ######    ########::::::# \r\n                                                                                                                     #:::::# \r\n                                                                                                         ######      #:::::# \r\n                                                                                                         #:::::##   ##:::::# \r\n                                                                                                          #::::::###:::::::# \r\n                                                                                                           ##:::::::::::::#  \r\n                                                                                                             ###::::::###    \r\n                                                                                                                ######       \r\n  `;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { commandLineText } from \"../../models/models\";\r\nimport { autoCompleteInput } from \"../../utils/utils\";\r\nimport \"./inputline.scss\";\r\n\r\ninterface InputLineProps {\r\n  handleCommand: Function;\r\n}\r\n\r\nconst InputLine: React.FC<InputLineProps> = ({ handleCommand }) => {\r\n  const [inputCommand, setInputCommand] = useState(\"\");\r\n  const [autoCompleteInputKeyword, setAutoCompleteInputKeyword] = useState(\"\");\r\n  const [autoCompleteSuggestionIndex, setAutoCompleteSuggestionIndex] =\r\n    useState(0);\r\n  const [commandStack, setCommandStack] = useState<string[]>([]);\r\n  const [inputCommandIndex, setInputCommandIndex] = useState<number>(-1);\r\n\r\n  useEffect(() => {\r\n    if (commandStack.length) {\r\n      handleCommand(inputCommand.trim());\r\n      setInputCommand(\"\");\r\n      setInputCommandIndex(commandStack.length);\r\n    }\r\n  }, [commandStack]);\r\n\r\n  useEffect(() => {\r\n    triggerAutoComplete();\r\n  }, [autoCompleteInputKeyword]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      inputCommandIndex > -1 &&\r\n      inputCommandIndex <= commandStack.length - 1\r\n    ) {\r\n      setInputCommand(commandStack[inputCommandIndex]);\r\n    }\r\n  }, [inputCommandIndex]);\r\n\r\n  const triggerAutoComplete = () => {\r\n    if (autoCompleteInputKeyword.length) {\r\n      const autoCompleteResultIndex = autoCompleteInput(\r\n        autoCompleteInputKeyword,\r\n        autoCompleteSuggestionIndex + 1,\r\n        setInputCommand\r\n      );\r\n      setAutoCompleteSuggestionIndex(autoCompleteResultIndex);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent) => {\r\n    if ([\"ArrowLeft\", \"ArrowRight\", \"Home\", \"End\"].includes(e.key)) {\r\n      e.preventDefault();\r\n      return;\r\n    }\r\n\r\n    if (e.key === \"Tab\") {\r\n      e.preventDefault();\r\n      if (autoCompleteInputKeyword.length) {\r\n        triggerAutoComplete();\r\n      } else {\r\n        setAutoCompleteInputKeyword(inputCommand);\r\n      }\r\n    } else if (e.key === \"Enter\") {\r\n      if (inputCommand?.trim()) {\r\n        setCommandStack([...commandStack, inputCommand.trim()]);\r\n      } else {\r\n        setInputCommand(\"\");\r\n      }\r\n    } else if (e.key === \"ArrowUp\") {\r\n      if (inputCommandIndex !== 0) {\r\n        setInputCommandIndex(inputCommandIndex - 1);\r\n      } else {\r\n        e.preventDefault();\r\n      }\r\n    } else if (e.key === \"ArrowDown\") {\r\n      if (inputCommandIndex <= commandStack.length - 1) {\r\n        setInputCommandIndex(inputCommandIndex + 1);\r\n        if (inputCommandIndex === commandStack.length - 1) {\r\n          setInputCommand(\"\");\r\n        }\r\n      }\r\n    } else {\r\n      setAutoCompleteInputKeyword(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-container\">\r\n      <div className=\"input-line\">\r\n        <div className=\"input-line__address\">{commandLineText}</div>\r\n        <input\r\n          onKeyDown={(e) => handleKeyDown(e)}\r\n          onBlur={(e) => e.target.focus()}\r\n          autoFocus\r\n          type=\"text\"\r\n          value={inputCommand}\r\n          style={{ width: inputCommand?.length + \"ch\" }}\r\n          onChange={(e) => setInputCommand(e.target.value)}\r\n          className=\"input-line__input-field\"\r\n        />\r\n        <div className=\"input-line__cursor\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputLine;\r\n","import React from \"react\";\r\nimport { acceptedInputs, outputs } from \"../models/models\";\r\n\r\nexport const showCommandNotFoundMessage = (command: string) => {\r\n  return (\r\n    <pre>\r\n      We could not find the command <span className=\"red\">{command}</span>\r\n      . <br />\r\n      Type <span className=\"white\">help</span> for all the available commands.\r\n    </pre>\r\n  );\r\n};\r\n\r\nexport const showCommandOutput = (command: string) => {\r\n  let output;\r\n  switch (command) {\r\n    case \"help\":\r\n      output = outputs[command];\r\n      break;\r\n    default:\r\n      output = (\r\n        <pre>\r\n          <span className=\"red\">{command}</span> command is still under\r\n          development.\r\n          <br />\r\n          Type <span className=\"white\">help</span> for all the available\r\n          commands.\r\n        </pre>\r\n      );\r\n  }\r\n  return output;\r\n};\r\n\r\nexport const autoCompleteInput = (\r\n  enteredInput: string,\r\n  autoCompleteSuggestionIndex: number,\r\n  setInputCommand: Function\r\n) => {\r\n  let acceptedInputsCopy = [...acceptedInputs];\r\n  let foundIndex = -1;\r\n  let modifiedAcceptedInputs = [\r\n    ...acceptedInputsCopy.slice(autoCompleteSuggestionIndex),\r\n    ...acceptedInputsCopy.slice(0, autoCompleteSuggestionIndex),\r\n  ];\r\n\r\n  let suggestion = modifiedAcceptedInputs.find((input) =>\r\n    input.startsWith(enteredInput)\r\n  );\r\n\r\n  if (suggestion) {\r\n    setInputCommand(suggestion);\r\n    foundIndex = acceptedInputsCopy.indexOf(suggestion);\r\n  }\r\n\r\n  return foundIndex;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { commandLineText } from \"../../models/models\";\r\n\r\ninterface OutputProps {\r\n  command: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Output: React.FC<OutputProps> = ({ command, children }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"input-line__address\">\r\n        <span style={{ marginRight: \"8px\" }}>{commandLineText}</span>\r\n        {command}\r\n      </div>\r\n      <br />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Output;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./rainBG.scss\";\r\n\r\nvar tileSize = 20;\r\n// a higher fade factor will make the characters fade quicker\r\nvar fadeFactor = 0.05;\r\n\r\nvar canvas: HTMLCanvasElement;\r\nvar ctx: CanvasRenderingContext2D;\r\n\r\ninterface ColumnTypeInterface {\r\n  x: number;\r\n  stackHeight: number;\r\n  stackCounter: number;\r\n}\r\nvar columns: Array<ColumnTypeInterface> = [];\r\nvar maxStackHeight: number;\r\n\r\nexport default function RainBG() {\r\n  useEffect(() => {\r\n    canvas = document.getElementById(\"canvas\")! as HTMLCanvasElement;\r\n    canvas.height = window.innerHeight + 16;\r\n    canvas.width = window.innerWidth + 16;\r\n\r\n    ctx = canvas.getContext(\"2d\")!;\r\n\r\n    initMatrix();\r\n\r\n    for (let iteration = 0; iteration < 120; iteration++) {\r\n      draw();\r\n    }\r\n\r\n    setInterval(draw, 100);\r\n  }, []);\r\n\r\n  function initMatrix() {\r\n    maxStackHeight = Math.ceil(canvas.height / tileSize);\r\n    for (let i = 0; i < canvas.width / tileSize; ++i) {\r\n      var column: ColumnTypeInterface = {\r\n        x: i * tileSize,\r\n        stackCounter: 0,\r\n        stackHeight: 10 + Math.random() * maxStackHeight,\r\n      };\r\n      columns.push(column);\r\n    }\r\n  }\r\n\r\n  function draw() {\r\n    // draw a semi transparent black rectangle on top of the scene to slowly fade older characters\r\n    ctx.fillStyle = \"rgba( 0 , 0 , 0 , \" + fadeFactor + \" )\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    // pick a font slightly smaller than the tile size\r\n    ctx.font = tileSize - 10 + \"px monospace\";\r\n    ctx.fillStyle = \"rgb( 0 , 255 , 0 )\";\r\n    for (let i = 0; i < columns.length; ++i) {\r\n      // pick a random ascii character (change the 94 to a higher number to include more characters)\r\n      var randomCharacter = String.fromCharCode(\r\n        33 + Math.floor(Math.random() * 94)\r\n      );\r\n      ctx.fillText(\r\n        randomCharacter,\r\n        columns[i].x,\r\n        columns[i].stackCounter * tileSize + tileSize\r\n      );\r\n\r\n      // if the stack is at its height limit, pick a new random height and reset the counter\r\n      if (++columns[i].stackCounter >= columns[i].stackHeight) {\r\n        columns[i].stackHeight = 10 + Math.random() * maxStackHeight;\r\n        columns[i].stackCounter = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <canvas\r\n      className=\"canvas\"\r\n      id=\"canvas\"\r\n      style={{ display: \"block\", margin: \"0 auto\" }}\r\n    ></canvas>\r\n  );\r\n}\r\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelSync, sync } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        sync.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelSync.update(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\nimport { fillWildcardKeyframes } from './wildcards.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        return fillWildcardKeyframes(origin, target);\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","function fillWildcardKeyframes(origin, [...keyframes]) {\n    /**\n     * Ensure an wildcard keyframes are hydrated by the origin.\n     */\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? origin : keyframes[i - 1];\n        }\n    }\n    return keyframes;\n}\n\nexport { fillWildcardKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.11.5\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                /**\n                 * If the parent target isn't up-to-date, force it to update.\n                 * This is an unfortunate de-optimisation as it means any updating relative\n                 * projection will cause all the relative parents to recalculate back\n                 * up the tree.\n                 */\n                if (this.relativeParent.resolvedRelativeTargetAt !==\n                    frameData.timestamp) {\n                    this.relativeParent.resolveTargetDelta(true);\n                }\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (\n                    // TODO: Ideally we would be able to improve optimisations by removing this line\n                    !this.relativeParent.isProjectionDirty &&\n                        prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.11.5\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.11.5 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./loading.scss\";\r\nimport { loadingMessages, loadingText } from \"../../models/models\";\r\nimport RainBG from \"../rainBG/rainBG\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function LoadingScreen() {\r\n  const [loadingTextIndex, setLoadingTextIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (loadingTextIndex === loadingMessages.length - 1) {\r\n        setLoadingTextIndex(0);\r\n      } else {\r\n        setLoadingTextIndex(loadingTextIndex + 1);\r\n      }\r\n    }, 400);\r\n  }, [loadingTextIndex]);\r\n\r\n  return (\r\n    <motion.div\r\n      initial={false}\r\n      animate={{ y: 0, opacity: 1 }}\r\n      exit={{ y: 200, opacity: 0 }}\r\n      transition={{ ease: \"easeIn\", bounce: false, type: \"just\" }}\r\n      className=\"motion__div\"\r\n    >\r\n      <RainBG />\r\n      <motion.div\r\n        initial={{ y: 100, opacity: 0 }}\r\n        animate={{ y: 0, opacity: 1 }}\r\n        transition={{ ease: \"easeIn\", bounce: false, type: \"just\" }}\r\n        className=\"loading__container\"\r\n      >\r\n        <pre className=\"loading__container__text\">{loadingText}</pre>\r\n        <p className=\"loading__container__message\">\r\n          {loadingMessages[loadingTextIndex]}\r\n        </p>\r\n        <div className=\"loading__container__bar\">\r\n          <div id=\"pacman1\"></div>\r\n          <div className=\"loading__container__bar__blocks\">\r\n            {Array.from({ length: 10 }, (_, i) => (\r\n              <motion.span\r\n                key={i}\r\n                initial={{ opacity: 1 }}\r\n                animate={{ opacity: 0 }}\r\n                transition={{ delay: 0.7 + 0.45 * i }}\r\n              ></motion.span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n}\r\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { sync } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import React, { useEffect, useState } from \"react\";\r\nimport InputLine from \"../../components/inputline/inputline\";\r\nimport { acceptedInputs } from \"../../models/models\";\r\nimport {\r\n  showCommandNotFoundMessage,\r\n  showCommandOutput,\r\n} from \"../../utils/utils\";\r\nimport \"./homepage.scss\";\r\nimport Output from \"../../components/output/output\";\r\nimport LoadingScreen from \"../../components/loading/loading\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\n\r\nconst Homepage: React.FC = () => {\r\n  const [outputStack, setOutputStack] = useState<React.ReactNode[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 5000);\r\n  }, []);\r\n\r\n  const handleCommand = (command: string) => {\r\n    let message;\r\n    if ([\"cls\", \"clr\", \"clear\"].includes(command)) {\r\n      setOutputStack([]);\r\n    } else {\r\n      if (!acceptedInputs.includes(command)) {\r\n        // doFuzzySearch()\r\n        message = showCommandNotFoundMessage(command);\r\n      } else {\r\n        message = showCommandOutput(command);\r\n      }\r\n      setOutputStack([\r\n        ...outputStack,\r\n        <Output command={command}>{message}</Output>,\r\n      ]);\r\n    }\r\n    document.querySelector(\".empty-space\")?.scrollIntoView();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <AnimatePresence>{isLoading && <LoadingScreen />}</AnimatePresence>\r\n      <div className=\"brand\">\r\n        <pre>\r\n          {`\r\n##    ## ##     ##  ######  ##     ##    ###    ##       ####  ######  \r\n##   ##  ##     ## ##    ## ##     ##   ## ##   ##       #### ##    ## \r\n##  ##   ##     ## ##       ##     ##  ##   ##  ##        ##  ##       \r\n#####    ##     ##  ######  ######### ##     ## ##       ##    ######  \r\n##  ##   ##     ##       ## ##     ## ######### ##                  ## \r\n##   ##  ##     ## ##    ## ##     ## ##     ## ##            ##    ## \r\n##    ##  #######   ######  ##     ## ##     ## ########       ######  \r\n            `}\r\n        </pre>\r\n        Built with{\" \"}\r\n        <a target=\"_blank\" href=\"https://www.gatsbyjs.com/\" className=\"link\">\r\n          Gatsby.js\r\n        </a>{\" \"}\r\n        &&nbsp;<span className=\"red\">&#10084;</span>\r\n        <br />\r\n        <br />\r\n      </div>\r\n      <div className=\"output-stack\">\r\n        {outputStack.map((output, index) => {\r\n          return (\r\n            <div className=\"output\" key={index}>\r\n              {output}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <InputLine handleCommand={handleCommand} />\r\n      <div className=\"empty-space\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n"],"names":["commandLineText","acceptedInputs","outputs","help","React","className","loadingMessages","_ref","handleCommand","inputCommand","setInputCommand","useState","autoCompleteInputKeyword","setAutoCompleteInputKeyword","autoCompleteSuggestionIndex","setAutoCompleteSuggestionIndex","commandStack","setCommandStack","inputCommandIndex","setInputCommandIndex","useEffect","length","trim","triggerAutoComplete","autoCompleteResultIndex","enteredInput","acceptedInputsCopy","foundIndex","suggestion","slice","find","input","startsWith","indexOf","autoCompleteInput","onKeyDown","e","includes","key","preventDefault","handleKeyDown","onBlur","target","focus","autoFocus","type","value","style","width","onChange","canvas","ctx","maxStackHeight","command","children","marginRight","tileSize","columns","RainBG","draw","fillStyle","fillRect","height","font","i","randomCharacter","String","fromCharCode","Math","floor","random","fillText","x","stackCounter","stackHeight","document","getElementById","window","innerHeight","innerWidth","getContext","ceil","column","push","initMatrix","iteration","setInterval","id","display","margin","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","useConstant","init","useRef","current","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","isMotionValue","getVelocity","translateAlias","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","transform","clamp","min","max","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","marginTop","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","buffer","add","cancel","index","splice","delete","process","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","requestAnimationFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","getZeroUnit","potentialUnitType","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","fillWildcardKeyframes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isZeroValueString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","read","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","getVariableValue","depth","fallback","exec","parseCSSVariable","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","resolvedRelativeTargetAt","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","mixBox","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","DOMVisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","LoadingScreen","loadingTextIndex","setLoadingTextIndex","setTimeout","div","_","span","useIsMounted","PopChildMeasure","childRef","sizeRef","offsetHeight","offsetWidth","offsetTop","offsetLeft","PopChild","dataset","motionPopId","head","appendChild","sheet","insertRule","removeChild","PresenceChild","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","childId","isComplete","getChildKey","AnimatePresence","exitBeforeEnter","forceRender","forcedRenderCount","setForcedRenderCount","useForceUpdate","forceRenderLayoutGroup","filteredChildren","filtered","Children","isValidElement","onlyElements","childrenToRender","exiting","presentChildren","allChildren","updateChildLookup","presentKeys","targetKeys","numPresent","insertionIndex","removeIndex","presentChild","cloneElement","outputStack","setOutputStack","isLoading","setIsLoading","href","InputLine","message","showCommandOutput","showCommandNotFoundMessage","Output","_document$querySelect","scrollIntoView"],"sourceRoot":""}